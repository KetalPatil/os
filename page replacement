**fifo**
#include <stdio.h>  
int main()  
{  
    int incomingStream[] = {4 , 1 , 2 , 4 , 5};  
    int pageFaults = 0;  
    int frames = 3;  
    int m, n, s, pages;   
    pages = sizeof(incomingStream)/sizeof(incomingStream[0]);   
    printf(" Incoming \t Frame 1 \t Frame 2 \t Frame 3 ");  
    int temp[ frames ];  
    for(m = 0; m < frames; m++)  
    {  
        temp[m] = -1;  
    }  
    for(m = 0; m < pages; m++)  
    {  
        s = 0;   
        for(n = 0; n < frames; n++)  
        {  
            if(incomingStream[m] == temp[n])  
            {  
                s++;  
                pageFaults--;  
            }  
        }  
        pageFaults++;  
        if((pageFaults <= frames) && (s == 0))  
        {  
            temp[m] = incomingStream[m];  
        }  
        else if(s == 0)  
        {  
            temp[(pageFaults - 1) % frames] = incomingStream[m];  
        }  
        printf("\n");  
        printf("%d\t\t\t",incomingStream[m]);  
        for(n = 0; n < frames; n++)  
        {  
            if(temp[n] != -1)  
                printf(" %d\t\t\t", temp[n]);  
            else  
                printf(" - \t\t\t");  
        }  
    }  
    printf("\nTotal Page Faults:\t%d\n", pageFaults);  
    return 0;  
}  

**lru**
#include<stdio.h>
int main()
{
int q[20],p[50],c=0,c1,d,f,i,j,k=0,n,r,t,b[20],c2[20];
printf("Enter no of pages:");
scanf("%d",&n);
printf("Enter the reference string:");
for(i=0;i<n;i++)
            scanf("%d",&p[i]);
printf("Enter no of frames:");
scanf("%d",&f);
q[k]=p[k];
printf("\n\t%d\n",q[k]);
c++;
k++;
for(i=1;i<n;i++)
            {
                        c1=0;
                        for(j=0;j<f;j++)
                        {
                                    if(p[i]!=q[j])
                                    c1++;
                        }
                        if(c1==f)
                        {
                                    c++;
                                    if(k<f)
                                    {
                                                q[k]=p[i];
                                                k++;
                                                for(j=0;j<k;j++)
                                                printf("\t%d",q[j]);
                                                printf("\n");
                                    }
                                    else
                                    {
                                                for(r=0;r<f;r++)
                                                {
                                                            c2[r]=0;
                                                            for(j=i-1;j<n;j--)
                                                            {
                                                            if(q[r]!=p[j])
                                                            c2[r]++;
                                                            else
                                                            break;
                                                }
                                    }
                                    for(r=0;r<f;r++)
                                     b[r]=c2[r];
                                    for(r=0;r<f;r++)
                                    {
                                                for(j=r;j<f;j++)
                                                {
                                                            if(b[r]<b[j])
                                                            {
                                                                        t=b[r];
                                                                        b[r]=b[j];
                                                                        b[j]=t;
                                                            }
                                                }
                                    }
                                    for(r=0;r<f;r++)
                                    {
                                                if(c2[r]==b[0])
                                                q[r]=p[i];
                                                printf("\t%d",q[r]);
                                    }
                                    printf("\n");
                        }
            }
}
printf("\nThe no of page faults is %d",c);
}

**optimal**
        
#include <stdio.h>

int find(int frame[], int frameSize , int cur) {
	int i;
	for(i = 0; i < frameSize; i++) {
		if(cur == frame[i]) return 1;
	}
	return 0;
}

void display(int frame[] , int framesize , int hit) {
	int i;
	for(i = 0; i < framesize; i++) {
		printf("%2d | " , frame[i]);
	}
	if(hit == 1) printf("HIT\n");
	else printf("*\n");
}

int replace(int ref[] ,int n ,int frame[] ,int framesize ,int start) {
	int i;
	for(i = 0; i < framesize; i++) {
		if(frame[i] == -1) return i;
	}
	
	int j , rep = 0 , max = -999;
	for(i = 0; i < framesize; i++) {
		int cur = frame[i];
		for(j = start; j < n; j++) {
			if(cur == ref[j]) break;
		}
		if(j > max) {
			max = j;
			rep = i;
		}
	}
	return rep;
}

void opt(int ref[] , int framesize , int n) {
	int frame[framesize];
	int i;
	for(i = 0; i < framesize; i++) frame[i] = -1;
	int hit = 0 , pf = 0;
	
	for(i = 0; i < n; i++) {
		int cur = ref[i];
		if(find(frame , framesize , cur) == 0) {
			pf++;
			int rep = replace(ref , n , frame , framesize , i+1);
			frame[rep] = cur;
			display(frame , framesize , 0);
		} else {
			hit++;
			display(frame , framesize , 1);
		}
	}
}

int main() {
	int ref[] = {12,15,12, 18 , 6,8, 11 ,12 , 19 , 12, 6 , 8 , 12  ,15 , 19 , 8};
  	int frameSize = 3;
	int n = 16;
    opt(ref , frameSize , n);
    return 0;
}
